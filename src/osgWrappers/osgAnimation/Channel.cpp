// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgAnimation/Channel>
#include <osgAnimation/Sampler>
#include <osgAnimation/Target>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ABSTRACT_OBJECT_REFLECTOR(osgAnimation::Channel)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osg::Referenced);
	I_Constructor0(____Channel,
	               "",
	               "");
	I_Constructor1(IN, const osgAnimation::Channel &, channel,
	               Properties::NON_EXPLICIT,
	               ____Channel__C5_Channel_R1,
	               "",
	               "");
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::PURE_VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Method1(void, update, IN, float, time,
	          Properties::PURE_VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::PURE_VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::PURE_VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, x,
	          Properties::PURE_VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(const std::string &, getName,
	          Properties::NON_VIRTUAL,
	          __C5_std_string_R1__getName,
	          "",
	          "");
	I_Method1(void, setName, IN, const std::string &, name,
	          Properties::NON_VIRTUAL,
	          __void__setName__C5_std_string_R1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::PURE_VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::PURE_VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_Method0(const std::string &, getTargetName,
	          Properties::NON_VIRTUAL,
	          __C5_std_string_R1__getTargetName,
	          "",
	          "");
	I_Method1(void, setTargetName, IN, const std::string &, name,
	          Properties::NON_VIRTUAL,
	          __void__setTargetName__C5_std_string_R1,
	          "",
	          "");
	I_Method0(float, getWeight,
	          Properties::NON_VIRTUAL,
	          __float__getWeight,
	          "",
	          "");
	I_Method1(void, setWeight, IN, float, w,
	          Properties::NON_VIRTUAL,
	          __void__setWeight__float,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::PURE_VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::PURE_VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(const std::string &, Name, 
	                 __C5_std_string_R1__getName, 
	                 __void__setName__C5_std_string_R1);
	I_SimpleProperty(osgAnimation::Sampler *, Sampler, 
	                 __Sampler_P1__getSampler, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(const std::string &, TargetName, 
	                 __C5_std_string_R1__getTargetName, 
	                 __void__setTargetName__C5_std_string_R1);
	I_SimpleProperty(float, Weight, 
	                 __float__getWeight, 
	                 __void__setWeight__float);
END_REFLECTOR

TYPE_NAME_ALIAS(std::vector< osg::ref_ptr< osgAnimation::Channel > >, osgAnimation::ChannelList)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler >, osgAnimation::DoubleStepChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler >, osgAnimation::FloatStepChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler >, osgAnimation::Vec2StepChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler >, osgAnimation::Vec3StepChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler >, osgAnimation::Vec4StepChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler >, osgAnimation::QuatStepChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::DoubleLinearSampler >, osgAnimation::DoubleLinearChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::FloatLinearSampler >, osgAnimation::FloatLinearChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec2LinearSampler >, osgAnimation::Vec2LinearChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec3LinearSampler >, osgAnimation::Vec3LinearChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec4LinearSampler >, osgAnimation::Vec4LinearChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::QuatSphericalLinearSampler >, osgAnimation::QuatSphericalLinearChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::FloatCubicBezierSampler >, osgAnimation::FloatCubicBezierChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::DoubleCubicBezierSampler >, osgAnimation::DoubleCubicBezierChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec2CubicBezierSampler >, osgAnimation::Vec2CubicBezierChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec3CubicBezierSampler >, osgAnimation::Vec3CubicBezierChannel)

TYPE_NAME_ALIAS(osgAnimation::TemplateChannel< osgAnimation::Vec4CubicBezierSampler >, osgAnimation::Vec4CubicBezierChannel)

BEGIN_VALUE_REFLECTOR(osg::ref_ptr< osgAnimation::Channel >)
	I_DeclaringFile("osg/ref_ptr");
	I_Constructor0(____ref_ptr,
	               "",
	               "");
	I_Constructor1(IN, osgAnimation::Channel *, ptr,
	               Properties::NON_EXPLICIT,
	               ____ref_ptr__T_P1,
	               "",
	               "");
	I_Constructor1(IN, const osg::ref_ptr< osgAnimation::Channel > &, rp,
	               Properties::NON_EXPLICIT,
	               ____ref_ptr__C5_ref_ptr_R1,
	               "",
	               "");
	I_Method0(osgAnimation::Channel *, get,
	          Properties::NON_VIRTUAL,
	          __T_P1__get,
	          "",
	          "");
	I_Method0(bool, valid,
	          Properties::NON_VIRTUAL,
	          __bool__valid,
	          "",
	          "");
	I_Method0(osgAnimation::Channel *, release,
	          Properties::NON_VIRTUAL,
	          __T_P1__release,
	          "",
	          "");
	I_Method1(void, swap, IN, osg::ref_ptr< osgAnimation::Channel > &, rp,
	          Properties::NON_VIRTUAL,
	          __void__swap__ref_ptr_R1,
	          "",
	          "");
	I_SimpleProperty(osgAnimation::Channel *, , 
	                 __T_P1__get, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler >)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osgAnimation::Channel);
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Constructor1(IN, const osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler > &, channel,
	               Properties::NON_EXPLICIT,
	               ____TemplateChannel__C5_TemplateChannel_R1,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, SamplerType *, s, 0, IN, osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler >::TargetType *, target, 0,
	                           ____TemplateChannel__SamplerType_P1__TargetType_P1,
	                           "",
	                           "");
	I_Method1(void, update, IN, float, time,
	          Properties::VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, target,
	          Properties::VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(SamplerType *, getOrCreateSampler,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getOrCreateSampler,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method0(const SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __C5_SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method1(void, setSampler, IN, SamplerType *, sampler,
	          Properties::NON_VIRTUAL,
	          __void__setSampler__SamplerType_P1,
	          "",
	          "");
	I_Method0(osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler >::TargetType *, getTargetTyped,
	          Properties::NON_VIRTUAL,
	          __TargetType_P1__getTargetTyped,
	          "",
	          "");
	I_Method1(void, setTarget, IN, osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler >::TargetType *, target,
	          Properties::NON_VIRTUAL,
	          __void__setTarget__TargetType_P1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(SamplerType *, Sampler, 
	                 0, 
	                 __void__setSampler__SamplerType_P1);
	I_SimpleProperty(SamplerType *, SamplerTyped, 
	                 __SamplerType_P1__getSamplerTyped, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(osgAnimation::TemplateChannel< osgAnimation::DoubleStepSampler >::TargetType *, TargetTyped, 
	                 __TargetType_P1__getTargetTyped, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler >)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osgAnimation::Channel);
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Constructor1(IN, const osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler > &, channel,
	               Properties::NON_EXPLICIT,
	               ____TemplateChannel__C5_TemplateChannel_R1,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, SamplerType *, s, 0, IN, osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler >::TargetType *, target, 0,
	                           ____TemplateChannel__SamplerType_P1__TargetType_P1,
	                           "",
	                           "");
	I_Method1(void, update, IN, float, time,
	          Properties::VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, target,
	          Properties::VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(SamplerType *, getOrCreateSampler,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getOrCreateSampler,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method0(const SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __C5_SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method1(void, setSampler, IN, SamplerType *, sampler,
	          Properties::NON_VIRTUAL,
	          __void__setSampler__SamplerType_P1,
	          "",
	          "");
	I_Method0(osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler >::TargetType *, getTargetTyped,
	          Properties::NON_VIRTUAL,
	          __TargetType_P1__getTargetTyped,
	          "",
	          "");
	I_Method1(void, setTarget, IN, osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler >::TargetType *, target,
	          Properties::NON_VIRTUAL,
	          __void__setTarget__TargetType_P1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(SamplerType *, Sampler, 
	                 0, 
	                 __void__setSampler__SamplerType_P1);
	I_SimpleProperty(SamplerType *, SamplerTyped, 
	                 __SamplerType_P1__getSamplerTyped, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(osgAnimation::TemplateChannel< osgAnimation::FloatStepSampler >::TargetType *, TargetTyped, 
	                 __TargetType_P1__getTargetTyped, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler >)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osgAnimation::Channel);
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Constructor1(IN, const osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler > &, channel,
	               Properties::NON_EXPLICIT,
	               ____TemplateChannel__C5_TemplateChannel_R1,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, SamplerType *, s, 0, IN, osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler >::TargetType *, target, 0,
	                           ____TemplateChannel__SamplerType_P1__TargetType_P1,
	                           "",
	                           "");
	I_Method1(void, update, IN, float, time,
	          Properties::VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, target,
	          Properties::VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(SamplerType *, getOrCreateSampler,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getOrCreateSampler,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method0(const SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __C5_SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method1(void, setSampler, IN, SamplerType *, sampler,
	          Properties::NON_VIRTUAL,
	          __void__setSampler__SamplerType_P1,
	          "",
	          "");
	I_Method0(osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler >::TargetType *, getTargetTyped,
	          Properties::NON_VIRTUAL,
	          __TargetType_P1__getTargetTyped,
	          "",
	          "");
	I_Method1(void, setTarget, IN, osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler >::TargetType *, target,
	          Properties::NON_VIRTUAL,
	          __void__setTarget__TargetType_P1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(SamplerType *, Sampler, 
	                 0, 
	                 __void__setSampler__SamplerType_P1);
	I_SimpleProperty(SamplerType *, SamplerTyped, 
	                 __SamplerType_P1__getSamplerTyped, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(osgAnimation::TemplateChannel< osgAnimation::QuatStepSampler >::TargetType *, TargetTyped, 
	                 __TargetType_P1__getTargetTyped, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler >)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osgAnimation::Channel);
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Constructor1(IN, const osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler > &, channel,
	               Properties::NON_EXPLICIT,
	               ____TemplateChannel__C5_TemplateChannel_R1,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, SamplerType *, s, 0, IN, osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler >::TargetType *, target, 0,
	                           ____TemplateChannel__SamplerType_P1__TargetType_P1,
	                           "",
	                           "");
	I_Method1(void, update, IN, float, time,
	          Properties::VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, target,
	          Properties::VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(SamplerType *, getOrCreateSampler,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getOrCreateSampler,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method0(const SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __C5_SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method1(void, setSampler, IN, SamplerType *, sampler,
	          Properties::NON_VIRTUAL,
	          __void__setSampler__SamplerType_P1,
	          "",
	          "");
	I_Method0(osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler >::TargetType *, getTargetTyped,
	          Properties::NON_VIRTUAL,
	          __TargetType_P1__getTargetTyped,
	          "",
	          "");
	I_Method1(void, setTarget, IN, osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler >::TargetType *, target,
	          Properties::NON_VIRTUAL,
	          __void__setTarget__TargetType_P1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(SamplerType *, Sampler, 
	                 0, 
	                 __void__setSampler__SamplerType_P1);
	I_SimpleProperty(SamplerType *, SamplerTyped, 
	                 __SamplerType_P1__getSamplerTyped, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(osgAnimation::TemplateChannel< osgAnimation::Vec2StepSampler >::TargetType *, TargetTyped, 
	                 __TargetType_P1__getTargetTyped, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler >)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osgAnimation::Channel);
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Constructor1(IN, const osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler > &, channel,
	               Properties::NON_EXPLICIT,
	               ____TemplateChannel__C5_TemplateChannel_R1,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, SamplerType *, s, 0, IN, osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler >::TargetType *, target, 0,
	                           ____TemplateChannel__SamplerType_P1__TargetType_P1,
	                           "",
	                           "");
	I_Method1(void, update, IN, float, time,
	          Properties::VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, target,
	          Properties::VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(SamplerType *, getOrCreateSampler,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getOrCreateSampler,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method0(const SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __C5_SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method1(void, setSampler, IN, SamplerType *, sampler,
	          Properties::NON_VIRTUAL,
	          __void__setSampler__SamplerType_P1,
	          "",
	          "");
	I_Method0(osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler >::TargetType *, getTargetTyped,
	          Properties::NON_VIRTUAL,
	          __TargetType_P1__getTargetTyped,
	          "",
	          "");
	I_Method1(void, setTarget, IN, osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler >::TargetType *, target,
	          Properties::NON_VIRTUAL,
	          __void__setTarget__TargetType_P1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(SamplerType *, Sampler, 
	                 0, 
	                 __void__setSampler__SamplerType_P1);
	I_SimpleProperty(SamplerType *, SamplerTyped, 
	                 __SamplerType_P1__getSamplerTyped, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(osgAnimation::TemplateChannel< osgAnimation::Vec3StepSampler >::TargetType *, TargetTyped, 
	                 __TargetType_P1__getTargetTyped, 
	                 0);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler >)
	I_DeclaringFile("osgAnimation/Channel");
	I_BaseType(osgAnimation::Channel);
	I_Method0(osgAnimation::Channel *, clone,
	          Properties::VIRTUAL,
	          __Channel_P1__clone,
	          "",
	          "");
	I_Constructor1(IN, const osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler > &, channel,
	               Properties::NON_EXPLICIT,
	               ____TemplateChannel__C5_TemplateChannel_R1,
	               "",
	               "");
	I_ConstructorWithDefaults2(IN, SamplerType *, s, 0, IN, osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler >::TargetType *, target, 0,
	                           ____TemplateChannel__SamplerType_P1__TargetType_P1,
	                           "",
	                           "");
	I_Method1(void, update, IN, float, time,
	          Properties::VIRTUAL,
	          __void__update__float,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method0(osgAnimation::Target *, getTarget,
	          Properties::VIRTUAL,
	          __Target_P1__getTarget,
	          "",
	          "");
	I_Method1(bool, setTarget, IN, osgAnimation::Target *, target,
	          Properties::VIRTUAL,
	          __bool__setTarget__Target_P1,
	          "",
	          "");
	I_Method0(SamplerType *, getOrCreateSampler,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getOrCreateSampler,
	          "",
	          "");
	I_Method0(osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(const osgAnimation::Sampler *, getSampler,
	          Properties::VIRTUAL,
	          __C5_Sampler_P1__getSampler,
	          "",
	          "");
	I_Method0(SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method0(const SamplerType *, getSamplerTyped,
	          Properties::NON_VIRTUAL,
	          __C5_SamplerType_P1__getSamplerTyped,
	          "",
	          "");
	I_Method1(void, setSampler, IN, SamplerType *, sampler,
	          Properties::NON_VIRTUAL,
	          __void__setSampler__SamplerType_P1,
	          "",
	          "");
	I_Method0(osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler >::TargetType *, getTargetTyped,
	          Properties::NON_VIRTUAL,
	          __TargetType_P1__getTargetTyped,
	          "",
	          "");
	I_Method1(void, setTarget, IN, osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler >::TargetType *, target,
	          Properties::NON_VIRTUAL,
	          __void__setTarget__TargetType_P1,
	          "",
	          "");
	I_Method0(float, getStartTime,
	          Properties::VIRTUAL,
	          __float__getStartTime,
	          "",
	          "");
	I_Method0(float, getEndTime,
	          Properties::VIRTUAL,
	          __float__getEndTime,
	          "",
	          "");
	I_SimpleProperty(float, EndTime, 
	                 __float__getEndTime, 
	                 0);
	I_SimpleProperty(SamplerType *, Sampler, 
	                 0, 
	                 __void__setSampler__SamplerType_P1);
	I_SimpleProperty(SamplerType *, SamplerTyped, 
	                 __SamplerType_P1__getSamplerTyped, 
	                 0);
	I_SimpleProperty(float, StartTime, 
	                 __float__getStartTime, 
	                 0);
	I_SimpleProperty(osgAnimation::Target *, Target, 
	                 __Target_P1__getTarget, 
	                 __bool__setTarget__Target_P1);
	I_SimpleProperty(osgAnimation::TemplateChannel< osgAnimation::Vec4StepSampler >::TargetType *, TargetTyped, 
	                 __TargetType_P1__getTargetTyped, 
	                 0);
END_REFLECTOR

STD_VECTOR_REFLECTOR(std::vector< osg::ref_ptr< osgAnimation::Channel > >)

