// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Array>
#include <osg/ArrayDispatchers>
#include <osg/State>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

#include <osg/observer_ptr>
        
BEGIN_OBJECT_REFLECTOR(osg::ArrayDispatchers)
	I_DeclaringFile("osg/ArrayDispatchers");
	I_BaseType(osg::Referenced);
	I_Constructor0(____ArrayDispatchers,
	               "",
	               "");
	I_Method1(void, setState, IN, osg::State *, state,
	          Properties::NON_VIRTUAL,
	          __void__setState__osg_State_P1,
	          "",
	          "");
	I_Method2(osg::AttributeDispatch *, vertexDispatcher, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__vertexDispatcher__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method2(osg::AttributeDispatch *, normalDispatcher, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__normalDispatcher__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method2(osg::AttributeDispatch *, colorDispatcher, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__colorDispatcher__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method2(osg::AttributeDispatch *, secondaryColorDispatcher, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__secondaryColorDispatcher__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method2(osg::AttributeDispatch *, fogCoordDispatcher, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__fogCoordDispatcher__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method3(osg::AttributeDispatch *, texCoordDispatcher, IN, unsigned int, unit, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__texCoordDispatcher__unsigned_int__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method3(osg::AttributeDispatch *, vertexAttribDispatcher, IN, unsigned int, unit, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __AttributeDispatch_P1__vertexAttribDispatcher__unsigned_int__Array_P1__IndexArray_P1,
	          "",
	          "");
	I_Method0(void, reset,
	          Properties::NON_VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method1(void, setUseGLBeginEndAdapter, IN, bool, flag,
	          Properties::NON_VIRTUAL,
	          __void__setUseGLBeginEndAdapter__bool,
	          "",
	          "");
	I_Method0(bool, getUseGLBeginEndAdapter,
	          Properties::NON_VIRTUAL,
	          __bool__getUseGLBeginEndAdapter,
	          "",
	          "");
	I_Method1(void, setUseVertexAttribAlias, IN, bool, flag,
	          Properties::NON_VIRTUAL,
	          __void__setUseVertexAttribAlias__bool,
	          "",
	          "");
	I_Method0(bool, getUseVertexAttribAlias,
	          Properties::NON_VIRTUAL,
	          __bool__getUseVertexAttribAlias,
	          "",
	          "");
	I_Method2(void, activate, IN, unsigned int, binding, IN, osg::AttributeDispatch *, at,
	          Properties::NON_VIRTUAL,
	          __void__activate__unsigned_int__AttributeDispatch_P1,
	          "",
	          "");
	I_Method3(void, activateVertexArray, IN, unsigned int, binding, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateVertexArray__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method3(void, activateColorArray, IN, unsigned int, binding, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateColorArray__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method3(void, activateNormalArray, IN, unsigned int, binding, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateNormalArray__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method3(void, activateSecondaryColorArray, IN, unsigned int, binding, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateSecondaryColorArray__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method3(void, activateFogCoordArray, IN, unsigned int, binding, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateFogCoordArray__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method4(void, activateTexCoordArray, IN, unsigned int, binding, IN, unsigned int, unit, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateTexCoordArray__unsigned_int__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method4(void, activateVertexAttribArray, IN, unsigned int, binding, IN, unsigned int, unit, IN, osg::Array *, array, IN, osg::IndexArray *, indices,
	          Properties::NON_VIRTUAL,
	          __void__activateVertexAttribArray__unsigned_int__unsigned_int__osg_Array_P1__osg_IndexArray_P1,
	          "",
	          "");
	I_Method2(void, dispatch, IN, unsigned int, binding, IN, unsigned int, index,
	          Properties::NON_VIRTUAL,
	          __void__dispatch__unsigned_int__unsigned_int,
	          "",
	          "");
	I_Method1(bool, active, IN, unsigned int, binding,
	          Properties::NON_VIRTUAL,
	          __bool__active__unsigned_int,
	          "",
	          "");
	I_Method1(void, Begin, IN, GLenum, mode,
	          Properties::NON_VIRTUAL,
	          __void__Begin__GLenum,
	          "",
	          "");
	I_Method0(void, End,
	          Properties::NON_VIRTUAL,
	          __void__End,
	          "",
	          "");
	I_ProtectedMethod0(void, init,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__init,
	                   "",
	                   "");
	I_ProtectedMethod1(void, assignTexCoordDispatchers, IN, unsigned int, unit,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__assignTexCoordDispatchers__unsigned_int,
	                   "",
	                   "");
	I_ProtectedMethod1(void, assignVertexAttribDispatchers, IN, unsigned int, unit,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__assignVertexAttribDispatchers__unsigned_int,
	                   "",
	                   "");
	I_SimpleProperty(osg::State *, State, 
	                 0, 
	                 __void__setState__osg_State_P1);
	I_SimpleProperty(bool, UseGLBeginEndAdapter, 
	                 __bool__getUseGLBeginEndAdapter, 
	                 __void__setUseGLBeginEndAdapter__bool);
	I_SimpleProperty(bool, UseVertexAttribAlias, 
	                 __bool__getUseVertexAttribAlias, 
	                 __void__setUseVertexAttribAlias__bool);
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::AttributeDispatch)
	I_DeclaringFile("osg/ArrayDispatchers");
	I_BaseType(osg::Referenced);
	I_Constructor0(____AttributeDispatch,
	               "",
	               "");
	I_Method2(void, assign, IN, const GLvoid *, x, IN, const osg::IndexArray *, x,
	          Properties::VIRTUAL,
	          __void__assign__C5_GLvoid_P1__C5_IndexArray_P1,
	          "",
	          "");
END_REFLECTOR

