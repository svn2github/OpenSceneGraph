// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Notify>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

#include <osg/observer_ptr>
        
BEGIN_ABSTRACT_OBJECT_REFLECTOR(osg::NotifyHandler)
	I_DeclaringFile("osg/Notify");
	I_BaseType(osg::Referenced);
	I_Constructor0(____NotifyHandler,
	               "",
	               "");
	I_Method2(void, notify, IN, osg::NotifySeverity, severity, IN, const char *, message,
	          Properties::PURE_VIRTUAL,
	          __void__notify__osg_NotifySeverity__C5_char_P1,
	          "",
	          "");
END_REFLECTOR

BEGIN_OBJECT_REFLECTOR(osg::StandardNotifyHandler)
	I_DeclaringFile("osg/Notify");
	I_BaseType(osg::NotifyHandler);
	I_Constructor0(____StandardNotifyHandler,
	               "",
	               "");
	I_Method2(void, notify, IN, osg::NotifySeverity, severity, IN, const char *, message,
	          Properties::VIRTUAL,
	          __void__notify__osg_NotifySeverity__C5_char_P1,
	          "",
	          "");
END_REFLECTOR

BEGIN_ENUM_REFLECTOR(osg::NotifySeverity)
	I_DeclaringFile("osg/Notify");
	I_EnumLabel(osg::ALWAYS);
	I_EnumLabel(osg::FATAL);
	I_EnumLabel(osg::WARN);
	I_EnumLabel(osg::NOTICE);
	I_EnumLabel(osg::INFO);
	I_EnumLabel(osg::DEBUG_INFO);
	I_EnumLabel(osg::DEBUG_FP);
END_REFLECTOR

