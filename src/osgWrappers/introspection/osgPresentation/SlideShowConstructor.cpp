// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Group>
#include <osg/Image>
#include <osg/Node>
#include <osg/Switch>
#include <osg/Vec3>
#include <osg/Vec4>
#include <osgDB/Options>
#include <osgPresentation/SlideEventHandler>
#include <osgPresentation/SlideShowConstructor>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

#include <osg/observer_ptr>
        
BEGIN_ENUM_REFLECTOR(osgPresentation::SlideShowConstructor::CoordinateFrame)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_EnumLabel(osgPresentation::SlideShowConstructor::SLIDE);
	I_EnumLabel(osgPresentation::SlideShowConstructor::MODEL);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgPresentation::SlideShowConstructor)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_Method1(osgPresentation::LayerAttributes *, getOrCreateLayerAttributes, IN, osg::Node *, node,
	          Properties::NON_VIRTUAL,
	          __LayerAttributes_P1__getOrCreateLayerAttributes__osg_Node_P1,
	          "",
	          "");
	I_Method2(void, setDuration, IN, osg::Node *, node, IN, double, duration,
	          Properties::NON_VIRTUAL,
	          __void__setDuration__osg_Node_P1__double,
	          "",
	          "");
	I_Method2(void, addKey, IN, osg::Node *, node, IN, const osgPresentation::KeyPosition &, kp,
	          Properties::NON_VIRTUAL,
	          __void__addKey__osg_Node_P1__C5_KeyPosition_R1,
	          "",
	          "");
	I_Method2(void, addRunString, IN, osg::Node *, node, IN, const std::string &, runString,
	          Properties::NON_VIRTUAL,
	          __void__addRunString__osg_Node_P1__C5_std_string_R1,
	          "",
	          "");
	I_Method4(void, setJump, IN, osg::Node *, node, IN, bool, relativeJump, IN, int, slideNum, IN, int, layerNum,
	          Properties::NON_VIRTUAL,
	          __void__setJump__osg_Node_P1__bool__int__int,
	          "",
	          "");
	I_Method1(void, addPresentationKey, IN, const osgPresentation::KeyPosition &, kp,
	          Properties::NON_VIRTUAL,
	          __void__addPresentationKey__C5_KeyPosition_R1,
	          "",
	          "");
	I_Method1(void, addPresentationRunString, IN, const std::string &, runString,
	          Properties::NON_VIRTUAL,
	          __void__addPresentationRunString__C5_std_string_R1,
	          "",
	          "");
	I_Method1(void, addSlideKey, IN, const osgPresentation::KeyPosition &, kp,
	          Properties::NON_VIRTUAL,
	          __void__addSlideKey__C5_KeyPosition_R1,
	          "",
	          "");
	I_Method1(void, addSlideRunString, IN, const std::string &, runString,
	          Properties::NON_VIRTUAL,
	          __void__addSlideRunString__C5_std_string_R1,
	          "",
	          "");
	I_Method3(void, setSlideJump, IN, bool, relativeJump, IN, int, switchNum, IN, int, layerNum,
	          Properties::NON_VIRTUAL,
	          __void__setSlideJump__bool__int__int,
	          "",
	          "");
	I_Method1(void, addLayerKey, IN, const osgPresentation::KeyPosition &, kp,
	          Properties::NON_VIRTUAL,
	          __void__addLayerKey__C5_KeyPosition_R1,
	          "",
	          "");
	I_Method1(void, addLayerRunString, IN, const std::string &, runString,
	          Properties::NON_VIRTUAL,
	          __void__addLayerRunString__C5_std_string_R1,
	          "",
	          "");
	I_Method3(void, setLayerJump, IN, bool, relativeJump, IN, int, switchNum, IN, int, layerNum,
	          Properties::NON_VIRTUAL,
	          __void__setLayerJump__bool__int__int,
	          "",
	          "");
	I_Constructor1(IN, osgDB::Options *, options,
	               Properties::NON_EXPLICIT,
	               ____SlideShowConstructor__osgDB_Options_P1,
	               "",
	               "");
	I_Method0(void, createPresentation,
	          Properties::NON_VIRTUAL,
	          __void__createPresentation,
	          "",
	          "");
	I_Method2(void, setBackgroundColor, IN, const osg::Vec4 &, color, IN, bool, updateClearNode,
	          Properties::NON_VIRTUAL,
	          __void__setBackgroundColor__C5_osg_Vec4_R1__bool,
	          "",
	          "");
	I_Method0(const osg::Vec4 &, getBackgroundColor,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Vec4_R1__getBackgroundColor,
	          "",
	          "");
	I_Method1(void, setTextColor, IN, const osg::Vec4 &, color,
	          Properties::NON_VIRTUAL,
	          __void__setTextColor__C5_osg_Vec4_R1,
	          "",
	          "");
	I_Method0(const osg::Vec4 &, getTextColor,
	          Properties::NON_VIRTUAL,
	          __C5_osg_Vec4_R1__getTextColor,
	          "",
	          "");
	I_Method1(void, setPresentationName, IN, const std::string &, name,
	          Properties::NON_VIRTUAL,
	          __void__setPresentationName__C5_std_string_R1,
	          "",
	          "");
	I_Method1(void, setPresentationAspectRatio, IN, float, aspectRatio,
	          Properties::NON_VIRTUAL,
	          __void__setPresentationAspectRatio__float,
	          "",
	          "");
	I_Method1(void, setPresentationAspectRatio, IN, const std::string &, str,
	          Properties::NON_VIRTUAL,
	          __void__setPresentationAspectRatio__C5_std_string_R1,
	          "",
	          "");
	I_Method1(void, setPresentationDuration, IN, double, duration,
	          Properties::NON_VIRTUAL,
	          __void__setPresentationDuration__double,
	          "",
	          "");
	I_Method0(void, addSlide,
	          Properties::NON_VIRTUAL,
	          __void__addSlide,
	          "",
	          "");
	I_Method1(void, selectSlide, IN, int, slideNum,
	          Properties::NON_VIRTUAL,
	          __void__selectSlide__int,
	          "",
	          "");
	I_Method3(void, setSlideTitle, IN, const std::string &, name, IN, osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, osgPresentation::SlideShowConstructor::FontData &, fontData,
	          Properties::NON_VIRTUAL,
	          __void__setSlideTitle__C5_std_string_R1__PositionData_R1__FontData_R1,
	          "",
	          "");
	I_Method1(void, setSlideBackground, IN, const std::string &, name,
	          Properties::NON_VIRTUAL,
	          __void__setSlideBackground__C5_std_string_R1,
	          "",
	          "");
	I_Method1(void, setSlideDuration, IN, double, duration,
	          Properties::NON_VIRTUAL,
	          __void__setSlideDuration__double,
	          "",
	          "");
	I_MethodWithDefaults2(void, addLayer, IN, bool, inheritPreviousLayers, true, IN, bool, defineAsBaseLayer, false,
	                      Properties::NON_VIRTUAL,
	                      __void__addLayer__bool__bool,
	                      "",
	                      "");
	I_Method1(void, selectLayer, IN, int, layerNum,
	          Properties::NON_VIRTUAL,
	          __void__selectLayer__int,
	          "",
	          "");
	I_Method1(void, setLayerDuration, IN, double, duration,
	          Properties::NON_VIRTUAL,
	          __void__setLayerDuration__double,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::FontData &, getTitleFontData,
	          Properties::NON_VIRTUAL,
	          __FontData_R1__getTitleFontData,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::FontData &, getTitleFontDataDefault,
	          Properties::NON_VIRTUAL,
	          __FontData_R1__getTitleFontDataDefault,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getTitlePositionData,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getTitlePositionData,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getTitlePositionDataDefault,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getTitlePositionDataDefault,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::FontData &, getTextFontData,
	          Properties::NON_VIRTUAL,
	          __FontData_R1__getTextFontData,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::FontData &, getTextFontDataDefault,
	          Properties::NON_VIRTUAL,
	          __FontData_R1__getTextFontDataDefault,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getTextPositionData,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getTextPositionData,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getTextPositionDataDefault,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getTextPositionDataDefault,
	          "",
	          "");
	I_Method1(void, translateTextCursor, IN, const osg::Vec3 &, delta,
	          Properties::NON_VIRTUAL,
	          __void__translateTextCursor__C5_osg_Vec3_R1,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getImagePositionData,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getImagePositionData,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getImagePositionDataDefault,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getImagePositionDataDefault,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getModelPositionData,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getModelPositionData,
	          "",
	          "");
	I_Method0(osgPresentation::SlideShowConstructor::PositionData &, getModelPositionDataDefault,
	          Properties::NON_VIRTUAL,
	          __PositionData_R1__getModelPositionDataDefault,
	          "",
	          "");
	I_MethodWithDefaults4(void, layerClickToDoOperation, IN, osgPresentation::Operation, operation, , IN, bool, relativeJump, true, IN, int, slideNum, 0, IN, int, layerNum, 0,
	                      Properties::NON_VIRTUAL,
	                      __void__layerClickToDoOperation__Operation__bool__int__int,
	                      "",
	                      "");
	I_MethodWithDefaults5(void, layerClickToDoOperation, IN, const std::string &, command, , IN, osgPresentation::Operation, operation, , IN, bool, relativeJump, true, IN, int, slideNum, 0, IN, int, layerNum, 0,
	                      Properties::NON_VIRTUAL,
	                      __void__layerClickToDoOperation__C5_std_string_R1__Operation__bool__int__int,
	                      "",
	                      "");
	I_MethodWithDefaults4(void, layerClickEventOperation, IN, const osgPresentation::KeyPosition &, keyPos, , IN, bool, relativeJump, true, IN, int, slideNum, 0, IN, int, layerNum, 0,
	                      Properties::NON_VIRTUAL,
	                      __void__layerClickEventOperation__C5_KeyPosition_R1__bool__int__int,
	                      "",
	                      "");
	I_Method3(void, addBullet, IN, const std::string &, bullet, IN, osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, osgPresentation::SlideShowConstructor::FontData &, fontData,
	          Properties::NON_VIRTUAL,
	          __void__addBullet__C5_std_string_R1__PositionData_R1__FontData_R1,
	          "",
	          "");
	I_Method3(void, addParagraph, IN, const std::string &, paragraph, IN, osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, osgPresentation::SlideShowConstructor::FontData &, fontData,
	          Properties::NON_VIRTUAL,
	          __void__addParagraph__C5_std_string_R1__PositionData_R1__FontData_R1,
	          "",
	          "");
	I_Method3(void, addImage, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData,
	          Properties::NON_VIRTUAL,
	          __void__addImage__C5_std_string_R1__C5_PositionData_R1__C5_ImageData_R1,
	          "",
	          "");
	I_Method5(void, addStereoImagePair, IN, const std::string &, filenameLeft, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageDataLeft, IN, const std::string &, filenameRight, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageDataRight, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData,
	          Properties::NON_VIRTUAL,
	          __void__addStereoImagePair__C5_std_string_R1__C5_ImageData_R1__C5_std_string_R1__C5_ImageData_R1__C5_PositionData_R1,
	          "",
	          "");
	I_Method4(void, addGraph, IN, const std::string &, filename, IN, const std::string &, options, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData,
	          Properties::NON_VIRTUAL,
	          __void__addGraph__C5_std_string_R1__C5_std_string_R1__C5_PositionData_R1__C5_ImageData_R1,
	          "",
	          "");
	I_Method3(void, addVNC, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData,
	          Properties::NON_VIRTUAL,
	          __void__addVNC__C5_std_string_R1__C5_PositionData_R1__C5_ImageData_R1,
	          "",
	          "");
	I_Method3(void, addBrowser, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData,
	          Properties::NON_VIRTUAL,
	          __void__addBrowser__C5_std_string_R1__C5_PositionData_R1__C5_ImageData_R1,
	          "",
	          "");
	I_Method3(void, addPDF, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData,
	          Properties::NON_VIRTUAL,
	          __void__addPDF__C5_std_string_R1__C5_PositionData_R1__C5_ImageData_R1,
	          "",
	          "");
	I_Method3(osg::Image *, addInteractiveImage, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData,
	          Properties::NON_VIRTUAL,
	          __osg_Image_P1__addInteractiveImage__C5_std_string_R1__C5_PositionData_R1__C5_ImageData_R1,
	          "",
	          "");
	I_Method3(void, addModel, IN, osg::Node *, subgraph, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ModelData &, modelData,
	          Properties::NON_VIRTUAL,
	          __void__addModel__osg_Node_P1__C5_PositionData_R1__C5_ModelData_R1,
	          "",
	          "");
	I_Method3(void, addModel, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::ModelData &, modelData,
	          Properties::NON_VIRTUAL,
	          __void__addModel__C5_std_string_R1__C5_PositionData_R1__C5_ModelData_R1,
	          "",
	          "");
	I_Method3(void, addVolume, IN, const std::string &, filename, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData, IN, const osgPresentation::SlideShowConstructor::VolumeData &, volumeData,
	          Properties::NON_VIRTUAL,
	          __void__addVolume__C5_std_string_R1__C5_PositionData_R1__C5_VolumeData_R1,
	          "",
	          "");
	I_Method0(osg::Group *, takePresentation,
	          Properties::NON_VIRTUAL,
	          __osg_Group_P1__takePresentation,
	          "",
	          "");
	I_Method0(osg::Group *, getPresentation,
	          Properties::NON_VIRTUAL,
	          __osg_Group_P1__getPresentation,
	          "",
	          "");
	I_Method0(osg::Switch *, getPresentationSwitch,
	          Properties::NON_VIRTUAL,
	          __osg_Switch_P1__getPresentationSwitch,
	          "",
	          "");
	I_Method0(osg::Switch *, getCurrentSlide,
	          Properties::NON_VIRTUAL,
	          __osg_Switch_P1__getCurrentSlide,
	          "",
	          "");
	I_Method0(osg::Group *, getCurrentLayer,
	          Properties::NON_VIRTUAL,
	          __osg_Group_P1__getCurrentLayer,
	          "",
	          "");
	I_Method1(void, setLoopPresentation, IN, bool, loop,
	          Properties::NON_VIRTUAL,
	          __void__setLoopPresentation__bool,
	          "",
	          "");
	I_Method0(bool, getLoopPresentation,
	          Properties::NON_VIRTUAL,
	          __bool__getLoopPresentation,
	          "",
	          "");
	I_MethodWithDefaults1(void, setAutoSteppingActive, IN, bool, flag, true,
	                      Properties::NON_VIRTUAL,
	                      __void__setAutoSteppingActive__bool,
	                      "",
	                      "");
	I_Method0(bool, getAutoSteppingActive,
	          Properties::NON_VIRTUAL,
	          __bool__getAutoSteppingActive,
	          "",
	          "");
	I_ProtectedMethod1(void, findImageStreamsAndAddCallbacks, IN, osg::Node *, node,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__findImageStreamsAndAddCallbacks__osg_Node_P1,
	                   "",
	                   "");
	I_ProtectedMethod6(osg::Geometry *, createTexturedQuadGeometry, IN, const osg::Vec3 &, pos, IN, const osg::Vec4 &, rotation, IN, float, width, IN, float, height, IN, osg::Image *, image, IN, bool &, usedTextureRectangle,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __osg_Geometry_P1__createTexturedQuadGeometry__C5_osg_Vec3_R1__C5_osg_Vec4_R1__float__float__osg_Image_P1__bool_R1,
	                   "",
	                   "");
	I_ProtectedMethod1(osg::Vec3, computePositionInModelCoords, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData,
	                   Properties::NON_VIRTUAL,
	                   Properties::CONST,
	                   __osg_Vec3__computePositionInModelCoords__C5_PositionData_R1,
	                   "",
	                   "");
	I_ProtectedMethod2(void, updatePositionFromInModelCoords, IN, const osg::Vec3 &, vertex, IN, osgPresentation::SlideShowConstructor::PositionData &, positionData,
	                   Properties::NON_VIRTUAL,
	                   Properties::CONST,
	                   __void__updatePositionFromInModelCoords__C5_osg_Vec3_R1__PositionData_R1,
	                   "",
	                   "");
	I_ProtectedMethod1(osg::Vec3, convertSlideToModel, IN, const osg::Vec3 &, position,
	                   Properties::NON_VIRTUAL,
	                   Properties::CONST,
	                   __osg_Vec3__convertSlideToModel__C5_osg_Vec3_R1,
	                   "",
	                   "");
	I_ProtectedMethod1(osg::Vec3, convertModelToSlide, IN, const osg::Vec3 &, position,
	                   Properties::NON_VIRTUAL,
	                   Properties::CONST,
	                   __osg_Vec3__convertModelToSlide__C5_osg_Vec3_R1,
	                   "",
	                   "");
	I_ProtectedMethod1(osg::AnimationPathCallback *, getAnimationPathCallback, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __osg_AnimationPathCallback_P1__getAnimationPathCallback__C5_PositionData_R1,
	                   "",
	                   "");
	I_ProtectedMethod2(osg::Node *, attachMaterialAnimation, IN, osg::Node *, model, IN, const osgPresentation::SlideShowConstructor::PositionData &, positionData,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __osg_Node_P1__attachMaterialAnimation__osg_Node_P1__C5_PositionData_R1,
	                   "",
	                   "");
	I_ProtectedMethod5(bool, attachTexMat, IN, osg::StateSet *, stateset, IN, const osgPresentation::SlideShowConstructor::ImageData &, imageData, IN, float, s, IN, float, t, IN, bool, textureRectangle,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __bool__attachTexMat__osg_StateSet_P1__C5_ImageData_R1__float__float__bool,
	                   "",
	                   "");
	I_ProtectedMethod0(osg::StateSet *, createTransformStateSet,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __osg_StateSet_P1__createTransformStateSet,
	                   "",
	                   "");
	I_ProtectedMethod1(std::string, findFileAndRecordPath, IN, const std::string &, filename,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __std_string__findFileAndRecordPath__C5_std_string_R1,
	                   "",
	                   "");
	I_ProtectedMethod1(void, recordOptionsFilePath, IN, const osgDB::Options *, options,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void__recordOptionsFilePath__C5_osgDB_Options_P1,
	                   "",
	                   "");
	I_SimpleProperty(bool, AutoSteppingActive, 
	                 __bool__getAutoSteppingActive, 
	                 __void__setAutoSteppingActive__bool);
	I_SimpleProperty(const osg::Vec4 &, BackgroundColor, 
	                 __C5_osg_Vec4_R1__getBackgroundColor, 
	                 0);
	I_SimpleProperty(osg::Group *, CurrentLayer, 
	                 __osg_Group_P1__getCurrentLayer, 
	                 0);
	I_SimpleProperty(osg::Switch *, CurrentSlide, 
	                 __osg_Switch_P1__getCurrentSlide, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, ImagePositionData, 
	                 __PositionData_R1__getImagePositionData, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, ImagePositionDataDefault, 
	                 __PositionData_R1__getImagePositionDataDefault, 
	                 0);
	I_SimpleProperty(double, LayerDuration, 
	                 0, 
	                 __void__setLayerDuration__double);
	I_SimpleProperty(bool, LoopPresentation, 
	                 __bool__getLoopPresentation, 
	                 __void__setLoopPresentation__bool);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, ModelPositionData, 
	                 __PositionData_R1__getModelPositionData, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, ModelPositionDataDefault, 
	                 __PositionData_R1__getModelPositionDataDefault, 
	                 0);
	I_SimpleProperty(osg::Group *, Presentation, 
	                 __osg_Group_P1__getPresentation, 
	                 0);
	I_SimpleProperty(float, PresentationAspectRatio, 
	                 0, 
	                 __void__setPresentationAspectRatio__float);
	I_SimpleProperty(double, PresentationDuration, 
	                 0, 
	                 __void__setPresentationDuration__double);
	I_SimpleProperty(const std::string &, PresentationName, 
	                 0, 
	                 __void__setPresentationName__C5_std_string_R1);
	I_SimpleProperty(osg::Switch *, PresentationSwitch, 
	                 __osg_Switch_P1__getPresentationSwitch, 
	                 0);
	I_SimpleProperty(const std::string &, SlideBackground, 
	                 0, 
	                 __void__setSlideBackground__C5_std_string_R1);
	I_SimpleProperty(double, SlideDuration, 
	                 0, 
	                 __void__setSlideDuration__double);
	I_SimpleProperty(const osg::Vec4 &, TextColor, 
	                 __C5_osg_Vec4_R1__getTextColor, 
	                 __void__setTextColor__C5_osg_Vec4_R1);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::FontData &, TextFontData, 
	                 __FontData_R1__getTextFontData, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::FontData &, TextFontDataDefault, 
	                 __FontData_R1__getTextFontDataDefault, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, TextPositionData, 
	                 __PositionData_R1__getTextPositionData, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, TextPositionDataDefault, 
	                 __PositionData_R1__getTextPositionDataDefault, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::FontData &, TitleFontData, 
	                 __FontData_R1__getTitleFontData, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::FontData &, TitleFontDataDefault, 
	                 __FontData_R1__getTitleFontDataDefault, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, TitlePositionData, 
	                 __PositionData_R1__getTitlePositionData, 
	                 0);
	I_SimpleProperty(osgPresentation::SlideShowConstructor::PositionData &, TitlePositionDataDefault, 
	                 __PositionData_R1__getTitlePositionDataDefault, 
	                 0);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgPresentation::SlideShowConstructor::FontData)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_Constructor0(____FontData,
	               "",
	               "");
	I_PublicMemberProperty(std::string, font);
	I_PublicMemberProperty(osgText::Text::Layout, layout);
	I_PublicMemberProperty(osgText::Text::AlignmentType, alignment);
	I_PublicMemberProperty(osgText::Text::AxisAlignment, axisAlignment);
	I_PublicMemberProperty(float, characterSize);
	I_PublicMemberProperty(float, maximumHeight);
	I_PublicMemberProperty(float, maximumWidth);
	I_PublicMemberProperty(osg::Vec4, color);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgPresentation::SlideShowConstructor::ImageData)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_Constructor0(____ImageData,
	               "",
	               "");
	I_PublicMemberProperty(float, width);
	I_PublicMemberProperty(float, height);
	I_PublicMemberProperty(osg::Vec4, region);
	I_PublicMemberProperty(bool, region_in_pixel_coords);
	I_PublicMemberProperty(float, texcoord_rotate);
	I_PublicMemberProperty(osg::ImageStream::LoopingMode, loopingMode);
	I_PublicMemberProperty(int, page);
	I_PublicMemberProperty(osg::Vec4, backgroundColor);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgPresentation::SlideShowConstructor::ModelData)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_Constructor0(____ModelData,
	               "",
	               "");
	I_PublicMemberProperty(std::string, effect);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgPresentation::SlideShowConstructor::PositionData)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_Constructor0(____PositionData,
	               "",
	               "");
	I_Method0(bool, requiresPosition,
	          Properties::NON_VIRTUAL,
	          __bool__requiresPosition,
	          "",
	          "");
	I_Method0(bool, requiresScale,
	          Properties::NON_VIRTUAL,
	          __bool__requiresScale,
	          "",
	          "");
	I_Method0(bool, requiresRotate,
	          Properties::NON_VIRTUAL,
	          __bool__requiresRotate,
	          "",
	          "");
	I_Method0(bool, requiresAnimation,
	          Properties::NON_VIRTUAL,
	          __bool__requiresAnimation,
	          "",
	          "");
	I_Method0(bool, requiresMaterialAnimation,
	          Properties::NON_VIRTUAL,
	          __bool__requiresMaterialAnimation,
	          "",
	          "");
	I_PublicMemberProperty(osgPresentation::SlideShowConstructor::CoordinateFrame, frame);
	I_PublicMemberProperty(osg::Vec3, position);
	I_PublicMemberProperty(osg::Vec3, scale);
	I_PublicMemberProperty(osg::Vec4, rotate);
	I_PublicMemberProperty(osg::Vec4, rotation);
	I_PublicMemberProperty(std::string, animation_name);
	I_PublicMemberProperty(bool, absolute_path);
	I_PublicMemberProperty(bool, inverse_path);
	I_PublicMemberProperty(double, path_time_offset);
	I_PublicMemberProperty(double, path_time_multiplier);
	I_PublicMemberProperty(osg::AnimationPath::LoopMode, path_loop_mode);
	I_PublicMemberProperty(std::string, path);
	I_PublicMemberProperty(double, animation_material_time_offset);
	I_PublicMemberProperty(double, animation_material_time_multiplier);
	I_PublicMemberProperty(osgPresentation::AnimationMaterial::LoopMode, animation_material_loop_mode);
	I_PublicMemberProperty(std::string, animation_material_filename);
	I_PublicMemberProperty(std::string, fade);
END_REFLECTOR

BEGIN_ENUM_REFLECTOR(osgPresentation::SlideShowConstructor::VolumeData::ShadingModel)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_EnumLabel(osgPresentation::SlideShowConstructor::VolumeData::Standard);
	I_EnumLabel(osgPresentation::SlideShowConstructor::VolumeData::Light);
	I_EnumLabel(osgPresentation::SlideShowConstructor::VolumeData::Isosurface);
	I_EnumLabel(osgPresentation::SlideShowConstructor::VolumeData::MaximumIntensityProjection);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgPresentation::SlideShowConstructor::VolumeData)
	I_DeclaringFile("osgPresentation/SlideShowConstructor");
	I_Constructor0(____VolumeData,
	               "",
	               "");
	I_PublicMemberProperty(osgPresentation::SlideShowConstructor::VolumeData::ShadingModel, shadingModel);
	I_PublicMemberProperty(osg::ref_ptr< osg::TransferFunction1D >, transferFunction);
	I_PublicMemberProperty(bool, useTabbedDragger);
	I_PublicMemberProperty(bool, useTrackballDragger);
	I_PublicMemberProperty(bool, region_in_pixel_coords);
	I_PublicMemberProperty(float, alphaValue);
	I_PublicMemberProperty(float, cutoffValue);
	I_PublicMemberProperty(float, sampleDensityValue);
END_REFLECTOR

