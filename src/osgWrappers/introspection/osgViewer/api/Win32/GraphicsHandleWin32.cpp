// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osgViewer/api/Win32/GraphicsHandleWin32>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

#include <osg/observer_ptr>
        
BEGIN_VALUE_REFLECTOR(osgViewer::GraphicsHandleWin32)
	I_DeclaringFile("osgViewer/api/Win32/GraphicsHandleWin32");
	I_Constructor0(____GraphicsHandleWin32,
	               "",
	               "");
	I_Method1(void, setHWND, IN, HWND, hwnd,
	          Properties::NON_VIRTUAL,
	          __void__setHWND__HWND,
	          "Set native window. ",
	          "");
	I_Method0(HWND, getHWND,
	          Properties::NON_VIRTUAL,
	          __HWND__getHWND,
	          "Get native window. ",
	          "");
	I_Method1(void, setHDC, IN, HDC, hdc,
	          Properties::NON_VIRTUAL,
	          __void__setHDC__HDC,
	          "Set device context. ",
	          "");
	I_Method0(HDC, getHDC,
	          Properties::NON_VIRTUAL,
	          __HDC__getHDC,
	          "Get device context. ",
	          "");
	I_Method1(void, setWGLContext, IN, HGLRC, hglrc,
	          Properties::NON_VIRTUAL,
	          __void__setWGLContext__HGLRC,
	          "Set native OpenGL graphics context. ",
	          "");
	I_Method0(HGLRC, getWGLContext,
	          Properties::NON_VIRTUAL,
	          __HGLRC__getWGLContext,
	          "Get native OpenGL graphics context. ",
	          "");
	I_SimpleProperty(HDC, HDC, 
	                 __HDC__getHDC, 
	                 __void__setHDC__HDC);
	I_SimpleProperty(HWND, HWND, 
	                 __HWND__getHWND, 
	                 __void__setHWND__HWND);
	I_SimpleProperty(HGLRC, WGLContext, 
	                 __HGLRC__getWGLContext, 
	                 __void__setWGLContext__HGLRC);
END_REFLECTOR

