// ***************************************************************************
//
//   Generated automatically by genwrapper.
//   Please DO NOT EDIT this file!
//
// ***************************************************************************

#include <osgIntrospection/ReflectionMacros>
#include <osgIntrospection/TypedMethodInfo>
#include <osgIntrospection/StaticMethodInfo>
#include <osgIntrospection/Attributes>

#include <osg/Drawable>
#include <osg/Image>
#include <osg/Node>
#include <osg/Object>
#include <osg/Shader>
#include <osg/StateAttribute>
#include <osg/Uniform>
#include <osg/Vec2d>
#include <osg/Vec2f>
#include <osg/Vec3d>
#include <osg/Vec3f>
#include <osg/Vec4d>
#include <osg/Vec4f>
#include <osgDB/Input>
#include <osgDB/Options>
#include <osgDB/Registry>

// Must undefine IN and OUT macros defined in Windows headers
#ifdef IN
#undef IN
#endif
#ifdef OUT
#undef OUT
#endif

BEGIN_ENUM_REFLECTOR(osgDB::Field::FieldType)
	I_DeclaringFile("osgDB/Input");
	I_EnumLabel(osgDB::Field::OPEN_BRACKET);
	I_EnumLabel(osgDB::Field::CLOSE_BRACKET);
	I_EnumLabel(osgDB::Field::STRING);
	I_EnumLabel(osgDB::Field::WORD);
	I_EnumLabel(osgDB::Field::REAL);
	I_EnumLabel(osgDB::Field::INTEGER);
	I_EnumLabel(osgDB::Field::BLANK);
	I_EnumLabel(osgDB::Field::UNINITIALISED);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgDB::Field)
	I_DeclaringFile("osgDB/Input");
	I_Constructor0(____Field,
	               "",
	               "");
	I_Constructor1(IN, const osgDB::Field &, field,
	               Properties::NON_EXPLICIT,
	               ____Field__C5_Field_R1,
	               "",
	               "");
	I_Method0(void, reset,
	          Properties::NON_VIRTUAL,
	          __void__reset,
	          "",
	          "");
	I_Method1(void, addChar, IN, char, c,
	          Properties::NON_VIRTUAL,
	          __void__addChar__char,
	          "",
	          "");
	I_Method0(int, getNoCharacters,
	          Properties::NON_VIRTUAL,
	          __int__getNoCharacters,
	          "",
	          "");
	I_MethodWithDefaults1(void, setWithinQuotes, IN, bool, withinQuotes, true,
	                      Properties::NON_VIRTUAL,
	                      __void__setWithinQuotes__bool,
	                      "",
	                      "");
	I_Method0(bool, getWithinQuotes,
	          Properties::NON_VIRTUAL,
	          __bool__getWithinQuotes,
	          "",
	          "");
	I_Method1(void, setNoNestedBrackets, IN, int, no,
	          Properties::NON_VIRTUAL,
	          __void__setNoNestedBrackets__int,
	          "",
	          "");
	I_Method0(int, getNoNestedBrackets,
	          Properties::NON_VIRTUAL,
	          __int__getNoNestedBrackets,
	          "",
	          "");
	I_Method0(osgDB::Field::FieldType, getFieldType,
	          Properties::NON_VIRTUAL,
	          __FieldType__getFieldType,
	          "",
	          "");
	I_Method0(bool, isValid,
	          Properties::NON_VIRTUAL,
	          __bool__isValid,
	          "",
	          "");
	I_Method0(bool, isOpenBracket,
	          Properties::NON_VIRTUAL,
	          __bool__isOpenBracket,
	          "",
	          "");
	I_Method0(bool, isCloseBracket,
	          Properties::NON_VIRTUAL,
	          __bool__isCloseBracket,
	          "",
	          "");
	I_Method0(bool, isWord,
	          Properties::NON_VIRTUAL,
	          __bool__isWord,
	          "",
	          "");
	I_Method1(bool, matchWord, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __bool__matchWord__C5_char_P1,
	          "",
	          "");
	I_Method2(bool, matchWord, IN, const char *, str, IN, int, noCharacters,
	          Properties::NON_VIRTUAL,
	          __bool__matchWord__C5_char_P1__int,
	          "",
	          "");
	I_Method0(bool, isString,
	          Properties::NON_VIRTUAL,
	          __bool__isString,
	          "",
	          "");
	I_Method1(bool, matchString, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __bool__matchString__C5_char_P1,
	          "",
	          "");
	I_Method2(bool, matchString, IN, const char *, str, IN, int, noCharacters,
	          Properties::NON_VIRTUAL,
	          __bool__matchString__C5_char_P1__int,
	          "",
	          "");
	I_Method0(bool, isQuotedString,
	          Properties::NON_VIRTUAL,
	          __bool__isQuotedString,
	          "",
	          "");
	I_Method0(const char *, getStr,
	          Properties::NON_VIRTUAL,
	          __C5_char_P1__getStr,
	          "",
	          "");
	I_Method0(char *, takeStr,
	          Properties::NON_VIRTUAL,
	          __char_P1__takeStr,
	          "",
	          "");
	I_Method0(bool, isInt,
	          Properties::NON_VIRTUAL,
	          __bool__isInt,
	          "",
	          "");
	I_Method1(bool, matchInt, IN, int, i,
	          Properties::NON_VIRTUAL,
	          __bool__matchInt__int,
	          "",
	          "");
	I_Method1(bool, getInt, IN, int &, i,
	          Properties::NON_VIRTUAL,
	          __bool__getInt__int_R1,
	          "",
	          "");
	I_Method0(bool, isUInt,
	          Properties::NON_VIRTUAL,
	          __bool__isUInt,
	          "",
	          "");
	I_Method1(bool, matchUInt, IN, unsigned int, i,
	          Properties::NON_VIRTUAL,
	          __bool__matchUInt__unsigned_int,
	          "",
	          "");
	I_Method1(bool, getUInt, IN, unsigned int &, i,
	          Properties::NON_VIRTUAL,
	          __bool__getUInt__unsigned_int_R1,
	          "",
	          "");
	I_Method0(bool, isFloat,
	          Properties::NON_VIRTUAL,
	          __bool__isFloat,
	          "",
	          "");
	I_Method1(bool, matchFloat, IN, float, f,
	          Properties::NON_VIRTUAL,
	          __bool__matchFloat__float,
	          "",
	          "");
	I_Method1(bool, getFloat, IN, float &, f,
	          Properties::NON_VIRTUAL,
	          __bool__getFloat__float_R1,
	          "",
	          "");
	I_Method1(bool, getFloat, IN, double &, f,
	          Properties::NON_VIRTUAL,
	          __bool__getFloat__double_R1,
	          "",
	          "");
	I_StaticMethodWithDefaults2(osgDB::Field::FieldType, calculateFieldType, IN, const char *, str, , IN, bool, withinQuotes, false,
	                            __FieldType__calculateFieldType__C5_char_P1__bool_S,
	                            "",
	                            "");
	I_ProtectedMethod0(void, _init,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void___init,
	                   "",
	                   "");
	I_ProtectedMethod0(void, _free,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void___free,
	                   "",
	                   "");
	I_ProtectedMethod1(void, _copy, IN, const osgDB::Field &, ic,
	                   Properties::NON_VIRTUAL,
	                   Properties::NON_CONST,
	                   __void___copy__C5_Field_R1,
	                   "",
	                   "");
	I_SimpleProperty(osgDB::Field::FieldType, FieldType, 
	                 __FieldType__getFieldType, 
	                 0);
	I_SimpleProperty(int, NoCharacters, 
	                 __int__getNoCharacters, 
	                 0);
	I_SimpleProperty(int, NoNestedBrackets, 
	                 __int__getNoNestedBrackets, 
	                 __void__setNoNestedBrackets__int);
	I_SimpleProperty(const char *, Str, 
	                 __C5_char_P1__getStr, 
	                 0);
	I_SimpleProperty(bool, WithinQuotes, 
	                 __bool__getWithinQuotes, 
	                 __void__setWithinQuotes__bool);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgDB::FieldReader)
	I_DeclaringFile("osgDB/Input");
	I_Constructor0(____FieldReader,
	               "",
	               "");
	I_Constructor1(IN, const osgDB::FieldReader &, ic,
	               Properties::NON_EXPLICIT,
	               ____FieldReader__C5_FieldReader_R1,
	               "",
	               "");
	I_Method1(void, attach, IN, std::istream *, input,
	          Properties::NON_VIRTUAL,
	          __void__attach__std_istream_P1,
	          "",
	          "");
	I_Method0(void, detach,
	          Properties::NON_VIRTUAL,
	          __void__detach,
	          "",
	          "");
	I_Method0(bool, eof,
	          Properties::VIRTUAL,
	          __bool__eof,
	          "",
	          "");
	I_Method1(bool, readField, IN, osgDB::Field &, fieldPtr,
	          Properties::NON_VIRTUAL,
	          __bool__readField__Field_R1,
	          "",
	          "");
	I_Method0(void, ignoreField,
	          Properties::NON_VIRTUAL,
	          __void__ignoreField,
	          "",
	          "");
	I_Method0(int, getNoNestedBrackets,
	          Properties::NON_VIRTUAL,
	          __int__getNoNestedBrackets,
	          "no of unmatched `{' encountered so far in file ",
	          "");
	I_SimpleProperty(int, NoNestedBrackets, 
	                 __int__getNoNestedBrackets, 
	                 0);
END_REFLECTOR

BEGIN_VALUE_REFLECTOR(osgDB::FieldReaderIterator)
	I_DeclaringFile("osgDB/Input");
	I_Constructor0(____FieldReaderIterator,
	               "",
	               "");
	I_Constructor1(IN, const osgDB::FieldReaderIterator &, ic,
	               Properties::NON_EXPLICIT,
	               ____FieldReaderIterator__C5_FieldReaderIterator_R1,
	               "",
	               "");
	I_Method1(void, attach, IN, std::istream *, input,
	          Properties::NON_VIRTUAL,
	          __void__attach__std_istream_P1,
	          "",
	          "");
	I_Method0(void, detach,
	          Properties::NON_VIRTUAL,
	          __void__detach,
	          "",
	          "");
	I_Method0(bool, eof,
	          Properties::VIRTUAL,
	          __bool__eof,
	          "",
	          "");
	I_Method0(osgDB::FieldReader &, getFieldReader,
	          Properties::NON_VIRTUAL,
	          __FieldReader_R1__getFieldReader,
	          "",
	          "");
	I_Method2(void, insert, IN, int, pos, IN, osgDB::Field *, field,
	          Properties::NON_VIRTUAL,
	          __void__insert__int__Field_P1,
	          "",
	          "");
	I_Method2(void, insert, IN, int, pos, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __void__insert__int__C5_char_P1,
	          "",
	          "");
	I_Method1(osgDB::Field &, field, IN, int, pos,
	          Properties::NON_VIRTUAL,
	          __Field_R1__field__int,
	          "",
	          "");
	I_Method0(void, advanceOverCurrentFieldOrBlock,
	          Properties::NON_VIRTUAL,
	          __void__advanceOverCurrentFieldOrBlock,
	          "increments the iterator of the next simple field or whole block if the current field[0] is an open bracket ",
	          "");
	I_Method0(void, advanceToEndOfCurrentBlock,
	          Properties::NON_VIRTUAL,
	          __void__advanceToEndOfCurrentBlock,
	          "",
	          "");
	I_Method1(void, advanceToEndOfBlock, IN, int, noNestBrackets,
	          Properties::NON_VIRTUAL,
	          __void__advanceToEndOfBlock__int,
	          "",
	          "");
	I_Method1(bool, matchSequence, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __bool__matchSequence__C5_char_P1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, std::string &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__std_string_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, unsigned int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__unsigned_int_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__int_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, float &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__float_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec2f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec2f_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec3f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec3f_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec4f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec4f_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec2d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec2d_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec3d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec3d_R1,
	          "",
	          "");
	I_Method2(bool, readSequence, IN, const char *, keyword, IN, osg::Vec4d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__C5_char_P1__osg_Vec4d_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, std::string &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__std_string_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, unsigned int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__unsigned_int_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, int &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__int_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, float &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__float_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec2f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec2f_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec3f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec3f_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec4f &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec4f_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec2d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec2d_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec3d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec3d_R1,
	          "",
	          "");
	I_Method1(bool, readSequence, IN, osg::Vec4d &, value,
	          Properties::NON_VIRTUAL,
	          __bool__readSequence__osg_Vec4d_R1,
	          "",
	          "");
	I_SimpleProperty(osgDB::FieldReader &, FieldReader, 
	                 __FieldReader_R1__getFieldReader, 
	                 0);
END_REFLECTOR

TYPE_NAME_ALIAS(osg::ArgumentParser::Parameter, osgDB::Input::Parameter)

BEGIN_OBJECT_REFLECTOR(osgDB::Input)
	I_DeclaringFile("osgDB/Input");
	I_BaseType(osgDB::FieldReaderIterator);
	I_Constructor0(____Input,
	               "",
	               "");
	I_Method1(void, setOptions, IN, const osgDB::Options *, options,
	          Properties::NON_VIRTUAL,
	          __void__setOptions__C5_Options_P1,
	          "",
	          "");
	I_Method0(const osgDB::Options *, getOptions,
	          Properties::NON_VIRTUAL,
	          __C5_Options_P1__getOptions,
	          "",
	          "");
	I_Method1(osg::Object *, readObjectOfType, IN, const osg::Object &, compObj,
	          Properties::VIRTUAL,
	          __osg_Object_P1__readObjectOfType__C5_osg_Object_R1,
	          "",
	          "");
	I_Method1(osg::Object *, readObjectOfType, IN, const osgDB::basic_type_wrapper &, btw,
	          Properties::VIRTUAL,
	          __osg_Object_P1__readObjectOfType__C5_basic_type_wrapper_R1,
	          "",
	          "");
	I_Method0(osg::Object *, readObject,
	          Properties::VIRTUAL,
	          __osg_Object_P1__readObject,
	          "",
	          "");
	I_Method0(osg::Image *, readImage,
	          Properties::VIRTUAL,
	          __osg_Image_P1__readImage,
	          "",
	          "");
	I_Method0(osg::Drawable *, readDrawable,
	          Properties::VIRTUAL,
	          __osg_Drawable_P1__readDrawable,
	          "",
	          "");
	I_Method0(osg::StateAttribute *, readStateAttribute,
	          Properties::VIRTUAL,
	          __osg_StateAttribute_P1__readStateAttribute,
	          "",
	          "");
	I_Method0(osg::Uniform *, readUniform,
	          Properties::VIRTUAL,
	          __osg_Uniform_P1__readUniform,
	          "",
	          "");
	I_Method0(osg::Node *, readNode,
	          Properties::VIRTUAL,
	          __osg_Node_P1__readNode,
	          "",
	          "");
	I_Method0(osg::Shader *, readShader,
	          Properties::VIRTUAL,
	          __osg_Shader_P1__readShader,
	          "",
	          "");
	I_Method1(osg::Object *, readObject, IN, const std::string &, fileName,
	          Properties::VIRTUAL,
	          __osg_Object_P1__readObject__C5_std_string_R1,
	          "",
	          "");
	I_Method1(osg::Image *, readImage, IN, const std::string &, fileName,
	          Properties::VIRTUAL,
	          __osg_Image_P1__readImage__C5_std_string_R1,
	          "",
	          "");
	I_Method1(osg::Node *, readNode, IN, const std::string &, fileName,
	          Properties::VIRTUAL,
	          __osg_Node_P1__readNode__C5_std_string_R1,
	          "",
	          "");
	I_Method1(osg::Shader *, readShader, IN, const std::string &, fileName,
	          Properties::VIRTUAL,
	          __osg_Shader_P1__readShader__C5_std_string_R1,
	          "",
	          "");
	I_Method1(osg::Object *, getObjectForUniqueID, IN, const std::string &, uniqueID,
	          Properties::VIRTUAL,
	          __osg_Object_P1__getObjectForUniqueID__C5_std_string_R1,
	          "",
	          "");
	I_Method2(void, registerUniqueIDForObject, IN, const std::string &, uniqueID, IN, osg::Object *, obj,
	          Properties::VIRTUAL,
	          __void__registerUniqueIDForObject__C5_std_string_R1__osg_Object_P1,
	          "",
	          "");
	I_Method1(bool, read, IN, osgDB::Input::Parameter, value1,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter,
	          "",
	          "");
	I_Method2(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter,
	          "",
	          "");
	I_Method3(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method4(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method5(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method6(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5, IN, osgDB::Input::Parameter, value6,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method7(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5, IN, osgDB::Input::Parameter, value6, IN, osgDB::Input::Parameter, value7,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method8(bool, read, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5, IN, osgDB::Input::Parameter, value6, IN, osgDB::Input::Parameter, value7, IN, osgDB::Input::Parameter, value8,
	          Properties::NON_VIRTUAL,
	          __bool__read__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method1(bool, read, IN, const char *, str,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1,
	          "",
	          "");
	I_Method2(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter,
	          "",
	          "");
	I_Method3(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter,
	          "",
	          "");
	I_Method4(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method5(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method6(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method7(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5, IN, osgDB::Input::Parameter, value6,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method8(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5, IN, osgDB::Input::Parameter, value6, IN, osgDB::Input::Parameter, value7,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_Method9(bool, read, IN, const char *, str, IN, osgDB::Input::Parameter, value1, IN, osgDB::Input::Parameter, value2, IN, osgDB::Input::Parameter, value3, IN, osgDB::Input::Parameter, value4, IN, osgDB::Input::Parameter, value5, IN, osgDB::Input::Parameter, value6, IN, osgDB::Input::Parameter, value7, IN, osgDB::Input::Parameter, value8,
	          Properties::NON_VIRTUAL,
	          __bool__read__C5_char_P1__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter__Parameter,
	          "",
	          "");
	I_SimpleProperty(const osgDB::Options *, Options, 
	                 __C5_Options_P1__getOptions, 
	                 __void__setOptions__C5_Options_P1);
END_REFLECTOR

